<?php

namespace portalium\content\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use portalium\content\Module;
use portalium\user\models\User;
use yii\helpers\ArrayHelper;
/**
 * This is the model class for table "{{%content}}".
 *
 * @property int $id_content
 * @property string $name
 * @property string $title
 * @property string|null $body
 * @property int $id_user
 * @property int $id_category
 * @property int $status
 * @property string $date_create
 * @property string $date_update
 */
class Content extends \yii\db\ActiveRecord
{
    const STATUS = [
        'draft' => 0,
        'active' => 1,
        'publish' => 2,
    ];

    const ACCESS = [
        'public' => 0,
        'private' => 1,
    ];

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'createdAtAttribute' => 'date_create',
                'updatedAtAttribute' => 'date_update',
                'value' => date("Y-m-d H:i:s"),
            ],
            [
                'class' => 'yii\behaviors\BlameableBehavior',
                'createdByAttribute' => 'id_user',
                'updatedByAttribute' => 'id_user',
                'value' => Yii::$app->user->id,
            ],
        ];
    }

    public static function tableName()
    {
        return '{{%' . Module::$tablePrefix . 'content}}';
    }

    public function extraFields()
    {
        return ['category']; // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'title', 'id_category', 'status', 'access'], 'required'],
            [['title', 'body', 'layout'], 'string'],
            [['id_user', 'id_category', 'status', 'access'], 'integer'],
            [['date_create', 'date_update', 'body'], 'safe'],
            [['name'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id_content' => Module::t('Id Content'),
            'name' => Module::t('Name'),
            'title' => Module::t('Title'),
            'body' => Module::t('Body'),
            'id_user' => Module::t('Id User'),
            'id_category' => Module::t('Id Category'),
            'status' => Module::t('Status'),
            'access' => Module::t('Access'),
            'date_create' => Module::t('Date Create'),
            'date_update' => Module::t('Date Update'),
        ];
    }

    public static function getStatusList()
    {
        //return value and label
        return [
            'STATUS' => [
                self::STATUS['draft'] => Module::t('Draft'),
                self::STATUS['active'] => Module::t('Active'),
                self::STATUS['publish'] => Module::t('Publish'),
            ],
            'ACCESS' => [
                self::ACCESS['public'] => Module::t('Public'),
                self::ACCESS['private'] => Module::t('Private'),
            ],
        ];
    }

    public static function getContentList()
    {
        //return value and label
        return ArrayHelper::map(self::find()->all(), 'id_content', 'title');
    }

    public function getCategory()
    {
        return $this->hasMany(Category::class, ['id_category' => 'id_category']);
    }

    public function getUser()
    {
        return $this->hasOne(User::class, ['id_user' => 'id_user']);
    }
}
